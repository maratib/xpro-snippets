{
  "xPRO:RN Global StyleSheet": {
    "prefix": "rn-globalStyleSheet",
    "description": "React-Native Global Stylesheet",
    "body": [
      "import { StyleSheet, useWindowDimensions } from 'react-native';",
      "",
      "const useGlobalStyles = () => {",
      "  const { width, height, scale, fontScale } = useWindowDimensions();",
      "  return StyleSheet.create({",
      "  container: {",
      "    width: width,",
      "    height: height,",
      "    backgroundColor: 'red',",
      "    alignItems: 'center',",
      "    justifyContent: 'center',",
      "  },",
      "  heading: {",
      "    fontWeight: 'bold',",
      "    fontSize: 30,",
      "    color: 'white',",
      "  },", 
      "  text: {",
      "    fontWeight: 'bold',",
      "    color: 'white',",
      "  }",
      "});",
      "}",
      "",
      "export default useGlobalStyles;"
    ]
  },
  "xPRO:RN View Component": {
    "prefix": "rn-view-component",
    "description": "View Component (with return)",
    "body": [
      "import { View } from 'react-native';",
      "",
      "type Props = {",
      "    name?: string;",
      "};",
      "",
      "const $1 = ({ name }: Props) => { ",
      "    return (",
      "        <View>",
      "            $0",
      "        </View>",
      "    );",
      "};",
      "",
      "export default $1"
    ]
},
  "xPRO:RN Button component": {
    "prefix": "rn-button-fwdref",
    "description": "RN Button FrowardRef Component",
    "body": [
      "import { forwardRef } from 'react';",
      "import { StyleSheet, Text, TouchableOpacity, TouchableOpacityProps, View } from 'react-native';",
      "",
      "type Props = {",
      "  title: string;",
      "} & TouchableOpacityProps;",
      "",
      "export const $1 = forwardRef<View, Props>(({ title, ...touchableProps }, ref) => {",
      "  return (",
      "    <TouchableOpacity ref={ref} {...touchableProps} style={[styles.button, touchableProps.style]}>",
      "      <Text style={styles.buttonText}>{title}</Text>",
      "    </TouchableOpacity>",
      "  );",
      "});"
    ]
  },
  "xPRO:RN Button with Type and Styles": {
    "prefix": "rn-button-with-type-and-styles",
    "description": "RN Button with Type And Styles",
    "body": [
      "import { TouchableOpacity, Text, StyleSheet, ViewStyle, TextStyle } from 'react-native';",
      "",
      "// Define the types for the button's props",
      "type Props = {",
      "  title: string;",
      "  onPress: () => void;",
      "  type?: 'primary' | 'secondary' | 'outline'; // Define button types",
      "  buttonStyle?: ViewStyle;",
      "  textStyle?: TextStyle;",
      "}",
      "",
      "const $1 = ({ title, onPress, type = 'primary', buttonStyle, textStyle}: Props) => {",
      "  const getButtonStyles = () => {",
      "    switch (type) {",
      "      case 'primary':",
      "        return styles.primaryButton;",
      "      case 'secondary':",
      "        return styles.secondaryButton;",
      "      case 'outline':",
      "        return styles.outlineButton;",
      "      default:",
      "        return styles.primaryButton;",
      "    }",
      "  };",
      "",
      "  const getTextStyles = () => {",
      "    switch (type) {",
      "      case 'primary':",
      "        return styles.primaryText;",
      "      case 'secondary':",
      "        return styles.secondaryText;",
      "      case 'outline':",
      "        return styles.outlineText;",
      "      default:",
      "        return styles.primaryText;",
      "    }",  
      "  };",
      "",
      "",
      "return (",
      "    <TouchableOpacity",
      "      style={[styles.baseButton, getButtonStyles(), buttonStyle]}",
      "      onPress={onPress}",
      "    >",
      "      <Text style={[styles.baseText, getTextStyles(), textStyle]}>{title}$0</Text>",
      "    </TouchableOpacity>",
      "  );",
    "};",
    "",
    "const styles = StyleSheet.create({",
      "baseButton: {",
      "    paddingVertical: 12,",
      "    paddingHorizontal: 20,",
      "    borderRadius: 8,",
      "    alignItems: 'center',",
      "    justifyContent: 'center',",
      "    marginVertical: 5,",
      "  },",
      "  primaryButton: {",
      "    backgroundColor: '#007bff',",
      "  },",
      "  secondaryButton: {",
      "    backgroundColor: '#6c757d',",
      "  },",
      "  outlineButton: {",
      "    backgroundColor: 'transparent',",
      "    borderWidth: 1,",
      "    borderColor: '#007bff',",
      "  },",
      "   baseText: {",
      "    fontSize: 16,",
      "    fontWeight: 'bold',",
      "  },",
      "  primaryText: {",
      "    color: '#fff',",
      "  },",
      "  secondaryText: {",
      "    color: '#fff',",
      "  },",
      "  outlineText: {",
      "    color: '#007bff',",
      "  },",
      "});",
      "",
      "export default $1;"
    ]
  },
  "xPRO:RN Button with Styles": {
    "prefix": "rn-button-with-styles",
    "description": "RN Button with Styles",
    "body": [
      "import { TouchableOpacity, Text, StyleSheet, ViewStyle, TextStyle } from 'react-native';",
      "",

      "// Define the types for the button's props",
      "type Props = {",
      "  title: string;",
      "  onPress: () => void;",
      "  buttonStyle?: ViewStyle;",
      "  textStyle?: TextStyle;",
      "}",
      "const $1 = ({ title, onPress, buttonStyle, textStyle}: Props) => {",
      "  return (",
      "    <TouchableOpacity",
      "      style={[styles.baseButton, buttonStyle]}",
      "      onPress={onPress}",
      "    >",
      "      <Text style={[styles.baseText, textStyle]}>{title}$0</Text>",
      "    </TouchableOpacity>",
      "  );",
      "};",
      "",
      "const styles = StyleSheet.create({",
      "  baseButton: {",
      "    paddingVertical: 12,",
      "    paddingHorizontal: 20,",
      "    borderRadius: 8,",
      "    alignItems: 'center',",
      "    justifyContent: 'center',",
      "    marginVertical: 5,",
      "  },",
      "",
      "  baseText: {",
      "    fontSize: 16,",
      "    fontWeight: 'bold',",
      "  },", 
      "});",
      "",
      "export default $1;"


    ]
  },
  "xPRO:RN Container Component": {
    "prefix": "rn-container",
    "description": "RN Container Component",
    "body": [
      "import React from 'react';",
      "import { View, ViewStyle, StyleSheet } from 'react-native';",
      "",
      "type Props = {",
      "  children: React.ReactNode;",
      "  style?: ViewStyle;",
      "};",
      "",
      "const $1 = ({ children, style } : Props) => {",
      "  return (",
      "    <View style={[styles.container, style]}>",
      "      {children}$0",
      "    </View>",
      "  );",
   "};",
   "",
   "const styles = StyleSheet.create({",
   "  container: {",
   "    flex: 1,",
   "    padding: 20,",
   "    backgroundColor: '#f0f0f0',",
   "  },",
   "});",
   "",
   "export default $1;",
   ""
    ]
  },
  "xPRO:RN Container with Global Styles": {
    "prefix": "rn-container-with-global-styles",
    "description": "RN Container With Global Styles",
    "body": [
      "import React from 'react';",
      "import { View, ViewStyle } from 'react-native';",
      "",
      "type Props = {",
      "  children: React.ReactNode;",
      "  style?: ViewStyle;",
      "};",
      "",
      "const $1 = ({ children, style } : Props) => {",
      "  const styles = useGlobalStyles();",
      "  return (",
      "    <View style={[styles.container, style]}>",
      "      {children}$0",
      "    </View>",
      "  );",
   "};",
   "",
   "export default $1;",
   ""
    ]
  },
  "xPRO:RN Component": {
    "prefix": "rn-component",
    "description": "RN Component",
    "body": [
      "import { View, ViewStyle, StyleSheet } from 'react-native';",
      "",
      "type Props = {",
      "  style?: ViewStyle;",
      "};",
      "",
      "const $1 = ({ style } : Props) => {",
      "  return (",
      "    <View style={[styles.component, style]}>",
      "       $0{/* Add your content here */}",
      "    </View>",
      "  );",
      "};",
      "",
      "const styles = StyleSheet.create({",
      "  component: {",
      "    flex: 1,",
      "    padding: 20,",
      "    backgroundColor: '#f0f0f0',",
      "  },",
      "});",
      "",
      "export default $1;",
      ""
    ]
  },
  "xPRO:RN Component with Global Styles": {
    "prefix": "rn-component-with-global-styles",
    "description": "RN Component With Global Styles",
    "body": [
      "import { View, ViewStyle} from 'react-native';",
      "",
      "type Props = {",
      "  style?: ViewStyle;",
      "};",
      "",
      "const $1 = ({ style } : Props) => {",
      "  const styles = useGlobalStyles();",
      "  return (",
      "    <View style={[styles.component, style]}>",
      "       $0{/* Add your content here */}",
      "    </View>",
      "  );",
      "};",
      "",
      "export default $1;",
      ""
    ]
  },
  "xPRO:RN Text": {
    "prefix": "rn-text",
    "description": "RN Text Component",
    "body": [
      "<Text style={{$0}}>Hello World!</Text>"
    ]
  },
  "xPRO:RN View": {
    "prefix": "rn-view",
    "description": "RN View Component",
    "body": [
      "<View style={{$0}}>Hello World!</View>"
    ]
  },
  "xPRO:RN Button": {
    "prefix": "rn-button",
    "description": "RN Button",
    "body": [
       "<TouchableOpacity style={{backgroundColor: 'blue', padding: 10}} onPress={() => {}}>",
       "    <Text style={{color: 'white'}}>Press Me$0</Text>",
       "</TouchableOpacity>"
    ]
  }
}
  